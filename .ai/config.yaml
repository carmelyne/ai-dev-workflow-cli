# Default AI Workflow Configuration
version: "1.0.0"

project:
  name: "ai-dev-workflow-cli"
  type: "cli-tool"
  description: "Framework-agnostic tool that provides AI-guided development workflows and patterns"
  repository: "https://github.com/carmelyne/ai-dev-workflow-cli.git"
  language: typescript
  framework: none

development_workflow:
  feature_development:
    steps:
      1_user_story:
        description: "Create user story in Gherkin format"
        location: "docs/stories/${feature_name}.md"
        template: |
          Feature: ${feature_name}
            As a ${user_type}
            I want ${desired_action}
            So that ${business_value}

            Scenario: ${scenario_name}
              Given ${precondition}
              When ${action}
              Then ${expected_result}

            Acceptance Criteria:
              - [ ] Criteria 1
              - [ ] Criteria 2

      2_branch_creation:
        description: "Create feature branch"
        command: "git checkout -b ${branch_type}/${feature_name}"
        branch_types:
          - "feature"
          - "bugfix"
          - "hotfix"
          - "refactor"

      3_documentation_first:
        description: "Update documentation with planned changes"
        files:
          - "docs/technical/${feature_name}.md"
          - "docs/api/${affected_endpoints}.md"
          - "README.md"

      4_implementation:
        description: "Implement the feature"
        guidelines:
          - "Follow TypeScript best practices"
          - "Write tests first"
          - "Update documentation"
          - "Consider CLI user experience"
          - "Handle errors gracefully"

      5_testing:
        description: "Add and run tests"
        types:
          - name: "unit"
            tool: "jest"
            coverage: 80
          - name: "integration"
            tool: "jest"
          - name: "e2e"
            tool: "jest"

      6_pr_creation:
        description: "Create pull request"
        template: |
          ## Changes
          ${changes_description}

          ## Testing
          - [ ] Unit tests
          - [ ] Integration tests
          - [ ] Manual testing

          ## Documentation
          - [ ] API docs updated
          - [ ] README updated
          - [ ] Migration guide added

  documentation:
    setup:
      description: "Set up project documentation site"
      steps:
        1_structure:
          description: "Create documentation structure"
          directories:
            - "docs-site/"
            - "docs/technical/"
            - "docs/api/"
            - "docs/stories/"
          
        2_base_content:
          description: "Create base documentation files"
          files:
            - path: "docs-site/index.md"
              template: "storytelling"
            - path: "docs-site/getting-started.md"
              template: "guide"
            - path: "docs-site/commands.md"
              template: "reference"
            - path: "docs-site/_config.yml"
              template: "jekyll-config"

        3_github_pages:
          description: "Set up GitHub Pages"
          workflow:
            path: ".github/workflows/jekyll-gh-pages.yml"
            type: "Jekyll"
            source: "docs-site"
            branch: "main"
          
        4_automation:
          description: "Configure automatic deployments"
          actions:
            - "Enable GitHub Pages via API"
            - "Set up branch protection"
            - "Configure build triggers"

  versioning:
    strategy: "semantic"
    format: "v${major}.${minor}.${patch}"
    rules:
      major: "Breaking changes"
      minor: "New features"
      patch: "Bug fixes and minor changes"
    branch_protection:
      - "main"
      - "release/*"

  release_workflow:
    steps:
      1_version_bump:
        description: "Update version numbers"
        files:
          - "package.json"
          - "package-lock.json"
          - "src/version.ts"

patterns:
  documentation:
    storytelling:
      description: "Engaging, narrative documentation style"
      elements:
        - "User-focused scenarios"
        - "Conversational tone"
        - "Clear examples"
        - "Progressive disclosure"
      
    structure:
      description: "Standard documentation structure"
      sections:
        - "Quick Start"
        - "User Guide"
        - "API Reference"
        - "Examples"
        - "Contributing"

  cli:
    - name: "command-structure"
      description: "Consistent command structure using Commander.js"
    - name: "argument-handling"
      description: "Robust argument validation and processing"
    - name: "help-documentation"
      description: "Clear and helpful CLI documentation"
    
  typescript:
    - name: "strict-typing"
      description: "Use strict TypeScript features"
    - name: "interface-first"
      description: "Design with interfaces before implementation"
    - name: "dependency-injection"
      description: "Use DI for better testing and modularity"

templates:
  checklist:
    path: ".ai/templates/checklist.md"
    variables:
      - "branch_type"
      - "feature_name"
      - "coverage_target"
      - "notes"
      - "start_date"
      - "last_updated"
      - "status"
    defaults:
      coverage_target: 80
      status: "In Progress"

  documentation:
    storytelling: |
      # ${project_name}
      
      Ever wished you had ${problem_solution}? Meet ${project_name} - your ${project_description}.
      
      ## The Story
      ${user_story}
      
      ## Features
      ${features}
      
      ## Getting Started
      ${quick_start}
    
    guide: |
      # Getting Started with ${project_name}
      
      Welcome aboard! Let's get you set up with ${project_description}.
      
      ## Prerequisites
      ${prerequisites}
      
      ## Installation
      ${installation_steps}
      
      ## First Steps
      ${first_steps}
    
    reference: |
      # ${section_name}
      
      ## Overview
      ${overview}
      
      ## Details
      ${details}
      
      ## Examples
      ${examples}
